JUnit 5 단계별 학습 목차
1단계: JUnit 5 기본 이해 및 환경 설정
JUnit 5 소개 및 특징

JUnit 5 구성 요소 (JUnit Platform, JUnit Jupiter, JUnit Vintage)

개발 환경에 JUnit 5 설정하기 (Maven/Gradle)

첫 번째 테스트 작성 및 실행하기 (@Test 기본 사용법)

Assert 기본 사용법 (assertEquals, assertTrue, assertThrows 등)

2단계: 테스트 구조와 어노테이션 활용
테스트 라이프사이클 어노테이션

@BeforeEach, @AfterEach, @BeforeAll, @AfterAll 사용법과 차이점

테스트 이름 꾸미기 (@DisplayName)

조건부 테스트 실행

@EnabledOnOs, @DisabledOnOs, @EnabledIf, @DisabledIf

예외 테스트하기 (assertThrows 활용법)

3단계: 다양한 Assert와 Assumptions 활용
다양한 Assertions 메서드 정리 및 사용법

assertArrayEquals, assertIterableEquals, assertLinesMatch 등

assertAll로 여러 Assert를 한꺼번에 실행하는 방법

조건부 Assumptions

assumeTrue, assumeFalse 사용법과 실제 활용 예

4단계: 파라미터화 테스트 (Parameterized Tests)
@ParameterizedTest 소개 및 기본 사용법

다양한 소스별 테스트 데이터 공급 방법

@ValueSource, @CsvSource, @MethodSource, @EnumSource 등

커스텀 인자 변환기와 집계자 (ArgumentConverter, ArgumentsAggregator) 기본 개념

5단계: Mockito와 함께하는 단위 테스트
Mockito 기본 개념과 설치법 (JUnit 5 연동)

Mock, Stub, Spy 개념 이해 및 활용

@Mock, @InjectMocks 어노테이션 사용법

Mock 행동 정의 (when-thenReturn, doThrow 등)

메서드 호출 검증 (verify)

ArgumentCaptor를 활용한 인자 검증

Mockito 고급 기능: spy, 순서 검증, 호출 횟수 검증 등

6단계: 테스트 설계 및 좋은 테스트 코드 작성법
테스트 케이스 네이밍 전략

테스트 코드 리팩토링

테스트 격리 및 독립성 확보 방법

테스트 더블(Test Double) 종류와 역할

테스트 커버리지와 측정 방법

7단계: 통합 테스트와 스프링 부트 연동
@SpringBootTest를 활용한 통합 테스트 기본

MockBean과 실제 빈(bean)과의 차이점

테스트용 프로파일 설정 및 환경 구성

데이터베이스를 사용하는 테스트 (H2 임베디드 DB 등)

트랜잭션과 롤백 테스트

REST API 테스트 (MockMvc, TestRestTemplate)

8단계: 고급 기능 및 확장
커스텀 테스트 어노테이션 만들기

JUnit 5 확장 모델 (Extension API) 개요와 활용법

테스트 실행 순서 지정 (@TestMethodOrder, @Order)

동시성 테스트와 타임아웃 설정

테스트 결과 커스터마이징 (TestReporter 등)

부록: 최신 JUnit 5 트렌드 및 도구
Gradle/Maven 빌드와 JUnit 5 통합 팁

CI/CD 파이프라인에서 테스트 자동화하기

테스트 실패 분석 및 디버깅 팁

유용한 테스트 라이브러리 및 플러그인 소개